/////////////////////////////////////////////////////////////////////////////////////////////////

    KnowHow 0.2.1 / 06 November 2016

    Knowdledge macht frei.


/////////////////////////////////////////////////////////////////////////////////////////////////

﻿PhpStorm.
-------------------------------------------------------------------------------------------------
tar xvf your-archive.tar.gz. mv to /opt.
firefox  google  phpstorm8  sublime_text  vagrant.
All are there too.

Create a Desktop Shortcut. From IDE > Tools > Create Desktop Entry


Sublime Text 3.
-------------------------------------------------------------------------------------------------
Download .deb. $sudo dpkg -i whatever.deb. No need for aliasing.
Launch $subl filename 

XDebug for Linux.
-------------------------------------------------------------------------------------------------

jazio@jazio /etc/php5/mods-available $ ls
curl.ini  gd.ini  json.ini  mcrypt.ini  mysqli.ini  mysql.ini  mysqlnd.ini  opcache.ini  pdo.ini  pdo_mysql.ini  xdebug.ini
jazio@jazio /etc/php5/mods-available $ gksudo gedit xdebug.ini

zend_extension=xdebug.so
Then paste

xdebug.remote_enable=on
xdebug.remote_handler=dbgp
xdebug.remote_host=localhost
xdebug.remote_port=9000

In PhpStorm

Go to PHP HTTP Request and add the local server
Go to PHP Web Application and add the path to your current drupal installation.


VirtualBox.
-------------------------------------------------------------------------------------------------
Not found in package list. Add package sources in /etc/apt/sources.list (and /etc/apt/sources.list.d/official-package-repositories.list)


$ sudo sh -c 'echo "deb http://download.virtualbox.org/virtualbox/debian trusty contrib" >> /etc/apt/sources.list'
$ wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
$ sudo apt-get update
$ sudo apt-get install virtualbox-4.3


Composer.
-------------------------------------------------------------------------------------------------
Composer is not a package manager. Yes, it deals with "packages" or libraries, but it manages them on a per-project basis, installing them in a directory (e.g. vendor) inside your project. By default it will never install anything globally. Thus, it is a dependency manager.

This idea is not new and Composer is strongly inspired by node's npm and ruby's bundler. But there has not been such a tool for PHP.

$ curl -s http://getcomposer.org/installer | php

sudo mv composer.phar /usr/bin/composer

This moves the file into your bin, which allows you to access all commands with the much shorter example:
1

$ composer about

Composer uses a composer.json file to specify settings and package requirements for your application.

$ composer install

You'll now notice files being downloaded and placed into a new vendors/ folder within the root of your application.

Composer bundles with a PSR-0 autoloader, which you can include in your project with only a single line:

If you run composer global install, it will install it globally.


include_once './vendor/autoload.php';



Composer and Drush
-------------------
Since Drush is distributed as a PEAR package, it can be installed as project dependencies via Composer. This allow you to install Drush on a per-project basis, to ensure the proper version of is used. This is especially useful when using Drush in a build script run through a CI server such a Jenkins.

composer.json

{
  // ...
  "repositories": [
    {
      "type": "pear",
      "url": "pear.drush.org"
    }
  ],
  "config": {
    "bin-dir": "bin"
  },
  "require-dev": {
    "pear-drush/drush": "6.*"
  }
}

or from git
    "require": {
        "drush/drush": "6.*"
    }
After running composer install Drush will be available in the bin directory in your project dir. In order to use it from you shell, you need to add your the bin directory to your path and set the DRUSH_PHP environement variable. This can be done running the following commands from you project directory.

export PATH=`pwd`/bin:$PATH;
export DRUSH_PHP=`dirname $(which drush)`/composer-php;

Can you install multiple packages globally?
------------------------------------------
You can't install multiple versions of the same package.
If you want to install all Drush versions (e.g 6 and 7) you cannot install them globally
The files are installed in ~/.composer/vendor/ there you


vendor/{vendor}/{product}/{version}/
and in require
"vendor/product": ["version","version"...]

more on: http://www.jpstacey.info/blog/2014-04-07/switching-between-drush-major-versions








/////////////////////////////////////////////////////////////////////////////////////////////////

 DRUPAL 7

/////////////////////////////////////////////////////////////////////////////////////////////////

It is essentially a php 4 application: superglobals + code. The output is printed using header() + print $output. The order is uncontrolled, php easily will break.
Responses are strings instead objects.

/////////////////////////////////////////////////////////////////////////////////////////////////

 DRUPAL 8

/////////////////////////////////////////////////////////////////////////////////////////////////

API is more consistent. Building blocks are created the same way.
A request message managed by http server is causing a response object to return. All is handled by the Symfony HttpKernel. Never touch superglobals again.
Instead touch the object that does the black magic and output the response.
Everything Drupal does is inside the HttpKernelInterface that has only one method handle(Request $request) and turn the request into response.
during the request the controller fires: is the callable thing that is responsable for the request. Tha controller can return a response.
The response is not necessarly an array but can be plain HTML, json etc.


Check your PATH or HOME variables
echo $PATH


In your .bashrc add your path to Drush /home/jazio/.composer/vendor/bin
export PATH="/home/jazio/.composer/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"

Troubleshoot
-----------------
After installation the pages were in 404 status
Change AllowOverride None to AllowOverride All

<Directory />
	Options FollowSymLinks
	AllowOverride All
	Require all denied
</Directory>

<Directory /usr/share>
	AllowOverride All
	Require all granted
</Directory>

<Directory /var/www/>
	Options Indexes FollowSymLinks
	AllowOverride All
	Require all granted
</Directory>










Drush

-------------------------------------------------------------------------------------------------
Note that only Drush 7 is compatible with Drupal 8. It’s backward compatible with Drupal 6 and 7 so you can safely upgrade.
Alternatively, you can define aliases in your ~/.bashrc or ~/.bash_aliases file to invoke any specific Drush version required for your operations.

alias drush6="/usr/local/bin/drush"
alias drush7="/home/USERNAME/.composer/vendor/bin/drush"
- See more at: http://www.acquia.com/blog/leverage-drush-7-drupal-8#sthash.45slhpcZ.dpuf

You can fully export your active configuration with the config-export command. What this will do behind the scenes is to export your Drupal 8 configuration stored in the database to plain YAML files in your staging directory. - See more at: http://www.acquia.com/blog/leverage-drush-7-drupal-8#sthash.45slhpcZ.dpuf

Install a specific version of project: $drush dl og-7.x-1.3

Co-living with other versions of Drush
--------------
The simplest method is using composer global to quickly installed the desired version.
Uninstall your current drush (installed with apt-get)

sudo composer global require drush/drush:6

sudo composer global update

drush --version

alias drush="~/.composer/vendor/drush/drush/./drush"

if you need Drush 7
sudo composer global require drush/drush:dev-master
sudo composer global update

This will replace current version

In your .bashrc:

alias drush5=/path/to/drush5/drush
alias drush6=/path/to/drush6/drush

Drush Aliases
--------------
http://www.astonishdesign.com/blog/drush-aliases-what-why-and-how
there are configuration settings for dev / playground / server.
A drush alias is quite simply a shortcut to a remote Drupal site. It is in essence a tunnel through which drush commands can be issued.

Once configured properly, executing any drush command on any remote server you have shell access to is as simple as this:

[~] drush @remote [command]

Need to clear the cache after a theming update?

[~] drush @production cc all

Need to check the status of a feature after messing around in the admin interface?

[~] drush @dev fl

And my personal favorite, syncing a remote database with your local environment:

[~] drush sql-sync @staging @self
Here is a template https://www.drupal.org/node/1401522


Linux Mint Installation.
-------------------------------------------------------------------------------------------------
Reinstall Mint. Backup data and bash history.
Install wireless. cabel package manager: Broadcom corporation Wireless 1530.
nVidia. install nvidia-settings and nvidia-current
Installed. What’s next? https://sites.google.com/site/easylinuxtipsproject/mint-cinnamon-first
Run Updates. Update kernel from Update Manager.
Enable firewall: sudo ufw enable.

Configure Login Windows. Download. Sudo copy them to /usr/share/mdm then chmod 777 -R them.
Increase Fonts on task bar. vi /usr/share/cinnamon/theme/cinnamon.css change for for #panel. or from Panel settings move slider up.

In 64-bit, if you're experiencing issues with Skype, install the package "ia32-libs".

If VLC does not find your DVD player, click on Media->Open Disc, and specify '/dev/sr0' as the disc device.

Windows

Installed xdebug in Uniserver. Stop Apache. Enabled Basic Modules. Restart.


13/08
            -- bash install script based on http://ndever.net/articles/drupal/install-and-preconfigure-drupal-using-drush-and-bash-scripting
    -- evaluate collapse_text Drupal module -- it adds a collapsible tab inside body field.

Setting Up Chef and Vagrant on Windows 7 Under Cygwin

    -- install cygwin 32
    -- install chef , using the Win installer then adding alias paths in .bash_profile http://russellcardullo.com/blog/2012/07/15/setting-up-chef-and-vagrant-on-windows-7-under-cygwin/

.bashrc
# Note that if your username or password contain special characters you can enclose them in single quotes.
#e.g. http://'domain\username':'p@$$word'@host:port/
#http_proxy=http://username:password@host:port/
# I had to use http instead https
# this was need for using git clone
proxy='http://j50l033:cU2M>!:7@158.169.9.13:8012/'
export http_proxy=$proxy
export HTTP_PROXY=$proxy

alias knife='/cygdrive/c/opscode/chef/embedded/bin/ruby C:/opscode/chef/bin/knife'
alias chef-client='/cygdrive/c/opscode/chef/embedded/bin/ruby C:/opscode/chef/bin/chef-client'
alias chef-solo='/cygdrive/c/opscode/chef/embedded/bin/ruby C:/opscode/chef/bin/chef-solo'
alias shef='/cygdrive/c/opscode/chef/embedded/bin/ruby C:/opscode/chef/bin/shef

Note: .bash_profile is to be found in Users/farcaov folder
chef-client -v
Where should I put the config file? [C:\Users\farcaov/.chef/knife.rb]
Please enter the chef server URL: [https://D02DI1015653DIT.net1.cec.eu.int:443]

Test vagrant
$vagrant
$vagrant init
$vagrant up

14/08


@todo
-- Install VDD
https://www.drupal.org/node/2008758
https://www.drupal.org/node/2008792
-- install Drush on Cygwin https://www.drupal.org/node/1432756
-- configure proxy for git in cygwin fatal: unable to connect to github.com:
github.com[0: 192.30.252.131]: errno=Connection refused
-- install Vagrant on Cygwin
-- o 0033668101663

